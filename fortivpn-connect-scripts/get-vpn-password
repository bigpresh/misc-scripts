#!/usr/bin/env perl

# Return the password to use to connect to our FortiSSLVPN.
# Gets the password from .netrc, and the 2FA token from my mailbox.

use strict;
use warnings;
use DateTime;
use Net::IMAP::Simple;
use Email::Simple;
use Net::Netrc;
use MIME::Base64;

my $o365_creds = Net::Netrc->lookup('office365.com')
    or die "No office.com credentials in ~/.netrc";

my $dc_creds   = Net::Netrc->lookup('thg-dc')
    or die "No DC credentials in ~/.netrc";

my $imap = Net::IMAP::Simple->new(
    'outlook.office365.com', use_ssl => 1, port => 993,
) or die "Unable to connect by IMAP: $Net::IMAP::Simple::errstr\n";
my ($user, $pass) = $o365_creds->lpa;
if(!$imap->login($user, $pass)){
    print STDERR "Login as $user failed: " . $imap->errstr . "\n";
    exit(64);
}

# Get the most recent message in the folder
my $messages_count = $imap->select('INBOX/automails/2FA')
    or die "Failed to select 2FA mailbox";
my $message = $imap->get($messages_count);
my $es = Email::Simple->new(join '', @$message);

# Paranoia - make sure the email we found is what we're after, and
# not some other rubbish (this should never happen, otherwise I'd
# iterate over the most recent messages until we find one)
if ($es->header('Subject') ne 'Two Factor Authentication Passcode') {
    die "Unknown email found, subject: " . $es->header('Subject');
}

# Make sure the token is for today
#Wed, 14 Nov 2018 07:00:08 +0000

my ($date) = $es->header('Date') =~ /\b(\d+ \w+ \d{4})\b/;
my $today = DateTime->now->strftime('%d %b %Y');
$today =~ s/^0//;
if ($date ne $today) {
    die "Token was for $date, expected $today";
}

my ($token) = MIME::Base64::decode_base64($es->body) =~ /^(\d+)/;

if (!$token) {
    die "No token found in mail";
}

my ($vpn_user, $vpn_pass) = $dc_creds->lpa;

say $vpn_user . ':' . $vpn_pass . $token;



