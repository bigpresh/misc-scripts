=head1 NAME

check_mysql_stats - Nagios plugin for MySQL status monitoring

=head1 FEATURES

Why this, instead of the basic check_mysql?

=over

=item Check specific stats against thresholds

Want to just check the number of open tables is in a range you expect?

Sure, just C<-s 'Open tables:10:200' -t 20> - if the number of tables is less
than 10 or more than 200, you'll get an alarm - a WARNING if it's just outside,
a CRITICAL if it's outside by more than 20%.  You can repeat C<-s> parameters to
check as many different stats (as returned by C<mysqladmin status> as you wish.

=item Returns perfdata

Using nagiosgraph or Graphios to get metrics graphing from Nagios?  This plugin
will return perfdata, either for all stats if no specific stats were named to
check, or for the stat(s) named otherwise.

=item Useful C<Queries per second> metric

C<mysqladmin status> gives you a C<Queries per second avg> metric, which would
at first glance seem useful to you if you want to graph the number of queries
your database servers are seeing.  It's not, though, as it's the average QPS
since the server started, not for the last short period, so it won't reflect
changes in the query load the DB is seeing usefully.

If you use the C<--saved_state> parameter, then the status we get on each run
will be written to the named file; when we next run, we read the last run's
stats from the file - then, given we can work out how many new queries we've
seen since that file was updated, and how many seconds have passed since it was
updated, we can add a new C<Queries per second> metric which is actually useful.

(That metric can be used for threshold-checking just like any other one, and
will be returned in perfdata so you can graph it.)


=head1 AUTHOR

David Precious C<< <davidp@preshweb.co.uk> >>


=head1 FEEDBACK

Feedback very much welcomed.  Do feel free to drop me an email and let me know
if this is useful to you!

